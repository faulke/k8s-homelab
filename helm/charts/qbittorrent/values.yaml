qbittorrent:
  settings:
    automaticPortSetup: true
  ingress:
    main:
      enabled: true
      ingressClassName: "nginx"
      hosts:
        - host: torrents.homelab.com
          paths:
            - path: /
              pathType: Prefix
  env:
    TZ: America/Boise
    WAIT_FOR_VPN: "true"

  nodeSelector:
    dedicated: bitterroot

  tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "bitterroot"
      effect: "NoSchedule"

  persistence:
    config:
      enabled: true

    # This should be enabled so that both the qBittorrent and OpenVPN container have access to a shared volume mounted to /shared.
    # It will be used to communicate between the two containers.
    shared:
      enabled: true

    downloads:
      enabled: true
      existingClaim: nfs-pvc
      storageClass: nfs
      accessMode: ReadWriteMany

  addons:
    vpn:
      enabled: true
      # This Should be set to `openvpn`. This will set the add-on to use the default settings for OpenVPN based connections.
      type: openvpn

      openvpn:
        # This gets read by the Helm chart. The default OpenVPN image reads this and uses it to connect to the VPN provider.
        authSecret: tor-vpn-auth

      securityContext:
        runAsGroup: 0
        runAsUser: 0

      # If the podSecurityContext is set to run as a different user, make sure to run the OpenVPN container as root. 
      # This is required for it to be able to read certain configuration files. 

      env:
        # Set this environment variable to 'on' to make sure all traffic gets routed through the VPN container.
        # Make sure to check the other environment variables for the OpenVPN image to see how you can exclude certain
        # traffic from these firewall rules.
        TZ: America/Boise
        # FIREWALL: 'on'
        ROUTE: '10.0.0.0/8'

      # The .ovpn file provided by your VPN provider goes here.
      #
      # Any CA / certificate must either be placed inline, or provided through an additionalVolumeMount so that OpenVPN can find it.
      #
      # Pay close attention to the last 3 lines in this file. They must be added if you wish to run a script when the connection
      # is opened / closed.
      configFileSecret: tor-vpn-configfile

      # The scripts that get run when the VPN connection opens/closes are defined here.
      # The default scripts will write a string to represent the current connection state to a file.
      # Our qBittorrent image has a feature that can wait for this file to contain the word 'connected' before actually starting the application.

      scripts:
        up: |-
          #!/bin/bash
          /etc/openvpn/up.sh
          echo "connected" > /shared/vpnstatus

        down: |-
          #!/bin/bash
          /etc/openvpn/down.sh
          echo "disconnected" > /shared/vpnstatus